#pragma checksum "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "052dc0c20d2e2ebf83ef9f94906a776c8b5743f4"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ColoradoTrucking.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using ColoradoTrucking;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using ColoradoTrucking.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using GeoJson = ColoradoTrucking.Data.Responses.Body;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using ColoradoTrucking.Data.Responses;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Threading;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Threading.Tasks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/search")]
    public partial class CompanySearch : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 64 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
       
    string searchQuery;
    bool isSearching;
    CancellationTokenSource currentSearchCts;
    List<Feature> companyList = new List<Feature>();
    List<string> autoList;
    bool noResults;
    int filterChoice = 0;
    string location;

    //Value of the search box
    string SearchQuery {
        get => searchQuery;
        set {
            searchQuery = value;
            //When something is typed, kick off the AutoFill method
            if (!string.IsNullOrEmpty(searchQuery)) {
                _ = AutoFill(searchQuery);
            }
        }
    }

    bool IsSearching => isSearching || currentSearchCts != null;

    //Event callback to pass the json to parent component
    [Parameter]
    public EventCallback<GeoJson> LocationChanged { get; set; }

    //Generates data from database
    async Task AutoFill(string query) {
        try {

            noResults = false;
            currentSearchCts?.Cancel();
            currentSearchCts = new CancellationTokenSource();
            var cancellationToken = currentSearchCts.Token;
            autoList = new List<string>();

            // Wait 500ms before sending request
            await Task.Delay(200);
            if (!cancellationToken.IsCancellationRequested) {

                //Make request to API
                var results = await LocationService.GetCompaniesAsync(query, cancellationToken);
                if (!cancellationToken.IsCancellationRequested) {
                    companyList = results.body.features;
                }
            }
            //Notify component to redraw
            StateHasChanged();
        }
        catch (Exception ex) {
            Console.Error.WriteLine(ex.Message + " " + ex.StackTrace);
        }
    }

    //Event handler when user picks something from the autocomplete box
    //Filters geoJson to return only relevant values to parent component
    void GetSelected(ChangeEventArgs e) {
        location = (string)e.Value;
        RenderMap();
    }

    void RenderMap() {
        try {
            GeoJson geoJson;

            Regex zipPattern = new Regex(@"^[0-9]{5}(-[0-9]{4})?$");
            Regex cityPattern = new Regex(@"^\s*([a-zA-Z]+\s*){1,3}$");

            Func<Feature, bool> filter =
            (filterChoice) switch
            {
                0 => (feature => 1 == 1),
                1 => (feature => feature.properties.flag > 0),
                2 => (feature => feature.properties.flag == 0),
                _ => (feature => 1 == 1)
            };

            //If zip selected, return all values with that zip code
            if (zipPattern.IsMatch(location)) {
                geoJson = new GeoJson(companyList.Where(feature => feature.properties.inZip.Equals(location)).Where(filter).ToList<Feature>());
            }
            //If city selected, return all values in that city
            else if (cityPattern.IsMatch(location)) {
                geoJson = new GeoJson(companyList.Where(feature => feature.properties.inCity.Equals(location)).Where(filter).ToList<Feature>());
            }
            //Else default to address
            else {
                int pos = location.IndexOf('~');
                location = location.Substring(0, pos - 1);
                geoJson = new GeoJson(companyList.Where(feature => feature.properties.inName.StartsWith(location)).ToList<Feature>());
                Console.WriteLine(geoJson);
            }

            //If the results aren't null...
            if (geoJson != null) {
                //clear the searchbox
                //searchQuery = null;
                noResults = false;
                //Reinitialize the list
                //companyList = new List<Feature>();
                //Pass results to parent
                LocationChanged.InvokeAsync(geoJson);
            }
        }
        catch (ArgumentNullException) {}
    }

    void FilterChange(ChangeEventArgs e) {
        filterChoice = Convert.ToInt32(e.Value);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Data.Services.ILocationService LocationService { get; set; }
    }
}
#pragma warning restore 1591
