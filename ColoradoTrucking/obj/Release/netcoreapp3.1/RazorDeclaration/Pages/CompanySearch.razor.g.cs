#pragma checksum "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3b347b82cff0e9361654ea61bece1d49aa0b39fc"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ColoradoTrucking.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using ColoradoTrucking;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using ColoradoTrucking.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\_Imports.razor"
using GeoJson = ColoradoTrucking.Data.Responses.Body;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using ColoradoTrucking.Data.Responses;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Threading;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Threading.Tasks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/search")]
    public partial class CompanySearch : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 30 "C:\Users\Jason\source\repos\EnterpriseApps\ColoradoTrucking\Pages\CompanySearch.razor"
       
        string searchQuery;
        bool isSearching;
        CancellationTokenSource currentSearchCts;
        List<Feature> companyList = new List<Feature>();
        bool noResults;

        string SearchQuery {
            get => searchQuery;
            set {
                searchQuery = value;
                if (!string.IsNullOrEmpty(searchQuery)) {
                    _ = AutoFill(searchQuery);
                }
            }
        }

        bool IsSearching => isSearching || currentSearchCts != null;

    [Parameter]
    public EventCallback<GeoJson> LocationChanged { get; set; }

    async Task AutoFill(string query) {
        try {

            noResults = false;
            currentSearchCts?.Cancel();
            currentSearchCts = new CancellationTokenSource();
            var cancellationToken = currentSearchCts.Token;

            await Task.Delay(500);
            if (!cancellationToken.IsCancellationRequested) {

                var results = await LocationService.GetCompaniesAsync(query, cancellationToken);
                if (!cancellationToken.IsCancellationRequested) {
                    companyList = results.body.features;
                }
            }

            StateHasChanged();
        }
        catch (Exception ex) {
            Console.Error.WriteLine(ex.Message + " " + ex.StackTrace);
        }
    }

    void GetSelected(ChangeEventArgs e) {
        Regex zipPattern = new Regex(@"[0-9]{5}(-[0-9]{4})?");
        Regex cityPattern = new Regex(@"(\w+\s?){1,3}");
        Regex addressPattern = new Regex(@"^(\w+\s?){1,}-\s.+");

        string location = (string)e.Value;
        GeoJson geoJson;
        Console.WriteLine($"'{location}'");

        if (zipPattern.IsMatch(location)) {
            geoJson = new GeoJson(companyList.Where(e => e.properties.zip.Equals(location)).ToList<Feature>());
        }
        else if (addressPattern.IsMatch(location)) {
            int pos = location.IndexOf("-");
            location = location.Substring(0, pos - 2);
            Console.WriteLine(location);
            geoJson = new GeoJson(companyList.Where(e => e.properties.name.Equals(location)).ToList<Feature>());
        }
        else {
            geoJson = new GeoJson(companyList.Where(e => e.properties.city.Equals(location)).ToList<Feature>());
        }

        if (geoJson != null) {
            searchQuery = null;
            noResults = false;
            companyList = new List<Feature>();
            LocationChanged.InvokeAsync(geoJson);
        }

        Console.WriteLine(JsonSerializer.Serialize(geoJson));
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Data.Services.ILocationService LocationService { get; set; }
    }
}
#pragma warning restore 1591
