@page "/search"
@inject Data.ILocationService LocationService
@using System.Threading.Tasks
@using Models
@using System.Linq


<h3>CompanySearch</h3>

<input class="search" list="results" @bind="@SearchQuery" @bind:event="oninput" />

<datalist id="results">
        @foreach (var company in companyList.Take(10)) {
            <option value="@company"></option>
        }
   
</datalist>

@code{
    string searchQuery;
    bool noResults;
    List<string> companyList = new List<string>();

    string SearchQuery {
        get => searchQuery;
        set { searchQuery = value;
            if (!string.IsNullOrEmpty(searchQuery)) {
                Autofill(searchQuery);
            }
        }
    }

    void Autofill(string query) {
        noResults = false;
        using (var context = new EnterpriseContext()) {
            var _companyList = context.InService.Select(n => n.LegalName).Where(n =>
                n.Contains(query));
            noResults = _companyList.Count() == 0;
            companyList = _companyList.ToList();

            


        }
        StateHasChanged();
    }


}

<!-- #region API Call Method (deprecated) -->
@*@code {
        string searchQuery;
        bool noResults;
        List<string> companyList = new List<string>();

        string SearchQuery {
            get => searchQuery;
            set {
                searchQuery = value;
                if (!string.IsNullOrEmpty(searchQuery)) {
                    _ = AutoFill(searchQuery);
                }
            }
        }

        async Task AutoFill(string query) {
            //Put query or service here
            noResults = false;
            try {
                var results = await LocationService.GetCompanyNames(query);
                companyList = results;
                noResults = results.Count == 0;
            }
            catch (Exception ex) {
                Console.Error.WriteLine(ex.Message);
            }

            StateHasChanged();
        }
    }*@

<!-- #endregion -->
