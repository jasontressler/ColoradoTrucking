@page "/"
@namespace ColoradoTrucking.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Data.ILocationService LocationService
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ColoradoTrucking</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBQVB6OPOABt5C4J_1CthO9yQbKAwIf5wg&callback=initMap"></script>
    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 39, lng: -105.7821 },
                zoom: 6.9, minZoom: 6.9, mapTypeControl: false, streetViewControl: false,
            });

            map.data.loadGeoJson('../Markers.json');

            var bounds = new google.maps.LatLngBounds(
                new google.maps.LatLng(36.998440, -109.045658),
                new google.maps.LatLng(41.002379, -102.051562)
            )
            var CoBounds = [
                { lat: 36.998440, lng: -109.045658 },
                { lat: 40.999593, lng: -109.049950 },
                { lat: 41.002379, lng: -102.051562 },
                { lat: 36.992990, lng: -102.041874 }
            ]
            var WorldBounds = [ // covers the (mercator projection) world
                new google.maps.LatLng(85, 180),
                new google.maps.LatLng(85, 90),
                new google.maps.LatLng(85, 0),
                new google.maps.LatLng(85, -90),
                new google.maps.LatLng(85, -180),
                new google.maps.LatLng(0, -180),
                new google.maps.LatLng(-85, -180),
                new google.maps.LatLng(-85, -90),
                new google.maps.LatLng(-85, 0),
                new google.maps.LatLng(-85, 90),
                new google.maps.LatLng(-85, 180),
                new google.maps.LatLng(0, 180),
                new google.maps.LatLng(85, 180)
            ];

            var boundPoly = new google.maps.Polygon({
                paths: [WorldBounds, CoBounds],
                strokeColor: '#FF0000',
                strokeOpacity: .8,
                strokeWeight: 1.5,
                fillOpacity: .3
            });

            boundPoly.setMap(map);

            map.addListener('dragend', function () {
                if (bounds.contains(map.getCenter())) return;

                var c = map.getCenter(),
                    x = c.lng(),
                    y = c.lat(),
                    maxX = bounds.getNorthEast().lng(),
                    maxY = bounds.getNorthEast().lat(),
                    minX = bounds.getSouthWest().lng(),
                    minY = bounds.getSouthWest().lat();

                if (x < minX) x = minX;
                if (x > maxX) x = maxX;
                if (y < minY) y = minY;
                if (y > maxY) y = maxY;

                map.setCenter(new google.maps.LatLng(y, x));               
            });
        }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.5/js/bootstrap.min.js"></script>

</body>
</html>
